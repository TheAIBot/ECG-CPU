dp register(in asel, bsel : ns(3); 
			in storeenable : ns(1);
			in storesel : ns(3);
			in storedata : tc(32);
			out a, b : tc(32)) {
	reg r0 : tc(32);
	reg r1 : tc(32);
	reg r2 : tc(32);
	reg r3 : tc(32);
	reg r4 : tc(32);
	reg r5 : tc(32);
	reg r6 : tc(32);
	reg r7 : tc(32);

	always {
		a = asel == 0b000 ? r0 : 
			asel == 0b001 ? r1 : 
			asel == 0b010 ? r2 : 
			asel == 0b011 ? r3 : 
			asel == 0b100 ? r4 : 
			asel == 0b101 ? r5 : 
			asel == 0b110 ? r6 : 
						  r7;

		b = bsel == 0b000 ? r0 : 
			bsel == 0b001 ? r1 : 
			bsel == 0b010 ? r2 : 
			bsel == 0b011 ? r3 : 
			bsel == 0b100 ? r4 : 
			bsel == 0b101 ? r5 : 
			bsel == 0b110 ? r6 : 
						  r7;

		r1 = storeenable == 0 ?  r1 : storesel == 0b001 ?  storedata : r1;
		r2 = storeenable == 0 ?  r1 : storesel == 0b010 ?  storedata : r2;
		r3 = storeenable == 0 ?  r1 : storesel == 0b011 ?  storedata : r3;
		r4 = storeenable == 0 ?  r1 : storesel == 0b100 ?  storedata : r4;
		r5 = storeenable == 0 ?  r1 : storesel == 0b101 ?  storedata : r5;
		r6 = storeenable == 0 ?  r1 : storesel == 0b110 ?  storedata : r6;
		r7 = storeenable == 0 ?  r1 : storesel == 0b111 ?  storedata : r7;

	}
}

dp testRegister(out asel, bsel : ns(3); 
				out storeenable : ns(1);
				out storesel : ns(3);
				out storedata : tc(32);
				in a, b : tc(32)) {
	always{$display($dec, "Cycle:", $cycle, ", asel= ", asel, ", bsel= ", bsel, ", se= ", storeenable, ", ss= ", storesel, ", sd= ", storedata, ", a= ", a, ", b= ", b);}
	sfg test_0 {asel = 0b000; bsel = 0b000; storeenable = 0; storesel = 0b000; storedata = -3;}
	sfg test_1 {asel = 0b001; bsel = 0b001; storeenable = 1; storesel = 0b001; storedata = -3;}
	sfg test_2 {asel = 0b001; bsel = 0b001; storeenable = 0; storesel = 0b001; storedata = -3;}
	sfg test_3 {asel = 0b010; bsel = 0b010; storeenable = 1; storesel = 0b010; storedata = -3;}
	sfg test_4 {asel = 0b010; bsel = 0b010; storeenable = 0; storesel = 0b010; storedata = -3;}
	sfg test_5 {asel = 0b100; bsel = 0b100; storeenable = 1; storesel = 0b100; storedata = -3;}
	sfg test_6 {asel = 0b100; bsel = 0b100; storeenable = 0; storesel = 0b100; storedata = -3;}
	sfg test_7 {asel = 0b100; bsel = 0b100; storeenable = 1; storesel = 0b100; storedata = -5;}
	sfg test_8 {asel = 0b100; bsel = 0b100; storeenable = 0; storesel = 0b100; storedata = -3;}
}
// state machine to control testbench
fsm f_testbench(testRegister){
	initial s0; // begin with state s0
	state s1, s2, s3, s4, s5, s6, s7, s8;
	@s0 (test_0) -> s1;
	@s1 (test_1) -> s2;
	@s2 (test_2) -> s3;
	@s3 (test_3) -> s4;
	@s4 (test_4) -> s5;
	@s5 (test_5) -> s6;
	@s6 (test_6) -> s7;
	@s7 (test_7) -> s8;
	@s8 (test_8) -> s0;
}

system myFirstSystem {
	register(asel, bsel, storeenable, storesel, storedata, a, b);
	testRegister(asel, bsel, storeenable, storesel, storedata, a, b);
}
